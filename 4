import torch
from transformers import GPT2LMHeadModel, GPT2Tokenizer

def generate_response(prompt, max_length=100):
    tokenizer = GPT2Tokenizer.from_pretrained('gpt2')
    model = GPT2LMHeadModel.from_pretrained('gpt2')

    model.eval()

    inputs = tokenizer.encode(prompt, return_tensors='pt')

    with torch.no_grad():
        outputs = model.generate(
            inputs,
            max_length=max_length,
            num_return_sequences=1,
            no_repeat_ngram_size=2,
            temperature=0.7,
            top_k=50,
            top_p=0.95,
            pad_token_id=tokenizer.eos_token_id
        )

    response = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return response

def main():
    test_prompts = [
        "The future of artificial intelligence is",
        "Once upon a time in a distant galaxy",
        "The best way to learn programming is"
    ]
    
    print("GPT-2 Text Generation Examples:\n")
    for prompt in test_prompts:
        print(f"Prompt: {prompt}")
        response = generate_response(prompt)
        print(f"Generated Response: {response}\n")

if __name__ == "__main__":
    main()
