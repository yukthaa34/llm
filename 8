from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline

# Sample dataset
texts = [
    "I love this product, it's amazing!",
    "This is the worst purchase ever",
    "The product arrived on time",
    "Great customer service!",
    "Terrible experience, very disappointed",
    "It's okay, nothing special",
    "Absolutely fantastic results",
    "Don't waste your money",
    "The delivery was standard",
    "Just what I expected"
]

labels = [
    "Positive",
    "Negative",
    "Neutral",
    "Positive",
    "Negative",
    "Neutral",
    "Positive",
    "Negative",
    "Neutral",
    "Neutral"
]

# Create and train the classifier
def train_classifier():
    classifier = Pipeline([
        ('vectorizer', CountVectorizer()),
        ('classifier', MultinomialNB())
    ])
    
    classifier.fit(texts, labels)
    return classifier

# Function to predict sentiment
def predict_sentiment(text, classifier):
    prediction = classifier.predict([text])[0]
    return prediction

# Train the model
classifier = train_classifier()

# Example usage
test_texts = [
    "This exceeded my expectations!",
    "I regret buying this",
    "It serves its purpose"
]

for text in test_texts:
    sentiment = predict_sentiment(text, classifier)
    print(f"Text: {text}")
    print(f"Sentiment: {sentiment}\n")
